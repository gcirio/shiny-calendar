[{"name": "app.py", "content": "from shiny import App, ui, render, reactive\nfrom shiny_calendar import shiny_calendar, render_shiny_calendar\nfrom shiny_calendar import shiny_calendar_call_js_func\n\napp_ui = ui.page_fluid(\n    ui.card(\n        ui.h2(\"shiny-calendar demo\"),\n        ui.markdown(\"\"\"\n            - **config, init:** the calendar is configured and populated with events at init, and can be navigated using the built-in buttons\n            - **reactivity**: select a date or an event to see the data sent back to the server\n            - **custom js calls**: select an event to change its color, select a date and click on the \"Add Event\" button to add an event\n            \"\"\"),\n    ),\n    ui.card(\n        ui.markdown(\n            f\"\"\"**Calendar interaction**: {ui.output_text(\"valueOut\", inline=True)}\"\"\"\n        )\n    ),\n    ui.card(ui.input_action_button(\"button_add_event\", \"Add Event\")),\n    ui.card(shiny_calendar(\"my_calendar\")),\n)\n\n\ndef server(input, output, session):\n    event_counter = 0\n    selected_date = (\"\", \"\")\n\n    @reactive.effect\n    @reactive.event(input.button_add_event)\n    async def _():\n        if not selected_date:\n            ui.notification_show(\n                \"You must select a date in the calendar before adding an event\",\n                type=\"warning\",\n                duration=2,\n            )\n            return\n        nonlocal event_counter\n        event_counter = event_counter + 1\n        js_func = (\n            \"calendar.addEvent({id: 'id_%d', title: 'some event %d', start: '%s', end: '%s'});\"\n            % (event_counter, event_counter, selected_date[0], selected_date[1])\n        )\n        await shiny_calendar_call_js_func(session, \"my_calendar\", js_func)\n\n    @reactive.effect\n    async def _():\n        nonlocal selected_date\n        msg = input.my_calendar()\n        if msg[\"type\"] == \"eventClick\":\n            # if eventClick, set the border and background of then event to red\n            # the proper way would be to use eventClassNames, this is just an example\n            event_id = msg[\"data\"][\"event\"][\"id\"]\n            js_func = f\"\"\"\n                const calEvent = calendar.getEventById(\"{event_id}\");\n                calEvent.setProp(\"backgroundColor\", \"red\");\n                calEvent.setProp(\"borderColor\", \"red\");\n                \"\"\"\n            await shiny_calendar_call_js_func(session, \"my_calendar\", js_func)\n        elif msg[\"type\"] == \"select\":\n            selected_date = (msg[\"data\"][\"start\"], msg[\"data\"][\"end\"])\n\n    @render.text\n    def valueOut():\n        return f\"{input.my_calendar()}\"\n\n    @render_shiny_calendar\n    def my_calendar():\n        return [\n            {\n                # react on event click\n                \"eventClick\": \"\",\n                # react on date click\n                # \"dateClick\" : \"\",\n                # react on date/time selection\n                \"select\": \"\",\n                # react on date/time de-selection\n                # \"unselect\" : \"\",\n                # react on event add\n                # \"eventAdd\": \"\",\n                # react on event change\n                # \"eventChange\": \"\",\n                # react on event remove\n                # \"eventRemove\": \"\",\n                # react on events set\n                # \"eventsSet\": \"\",\n                \"headerToolbar\": {\n                    \"left\": \"today prev,next\",\n                    \"center\": \"title\",\n                    \"right\": \"timeGridDay,timeGridWeek listDay,listWeek dayGridDay,dayGridWeek,dayGridMonth\",\n                },\n                \"views\": {\n                    \"timeGridDay\": {\"buttonText\": \"time grid day\"},\n                    \"timeGridWeek\": {\"buttonText\": \"time grid week\"},\n                    \"listDay\": {\"buttonText\": \"list day\"},\n                    \"listWeek\": {\"buttonText\": \"list week\"},\n                    \"dayGridDay\": {\"buttonText\": \"day grid day\"},\n                    \"dayGridWeek\": {\"buttonText\": \"day grid week\"},\n                    \"dayGridMonth\": {\"buttonText\": \"day grid month\"},\n                },\n                \"initialDate\": \"2024-07-01\",\n                \"firstDay\": 1,\n                \"allDaySlot\": False,\n                \"editable\": True,\n                \"selectable\": True,\n                \"dayMaxEvents\": True,\n                \"initialView\": \"timeGridWeek\",\n                \"events\": [\n                    {\n                        \"id\": \"id1\",\n                        \"title\": \"Event 1\",\n                        \"start\": \"2024-07-03\",\n                        \"end\": \"2024-07-05\",\n                    },\n                    {\n                        \"id\": \"id2\",\n                        \"title\": \"Event 2\",\n                        \"start\": \"2024-07-01\",\n                        \"end\": \"2024-07-10\",\n                    },\n                    {\n                        \"id\": \"id3\",\n                        \"title\": \"Event 3\",\n                        \"start\": \"2024-07-20\",\n                        \"end\": \"2024-07-20\",\n                    },\n                    {\n                        \"id\": \"id4\",\n                        \"title\": \"Event 4\",\n                        \"start\": \"2024-07-23\",\n                        \"end\": \"2024-07-25\",\n                    },\n                    {\n                        \"id\": \"id5\",\n                        \"title\": \"Event 5\",\n                        \"start\": \"2024-07-29\",\n                        \"end\": \"2024-07-30\",\n                    },\n                    {\n                        \"id\": \"id6\",\n                        \"title\": \"Event 6\",\n                        \"start\": \"2024-07-28\",\n                        \"end\": \"2024-07-20\",\n                    },\n                    {\n                        \"id\": \"id7\",\n                        \"title\": \"Event 7\",\n                        \"start\": \"2024-07-01T08:30:00\",\n                        \"end\": \"2024-07-01T10:30:00\",\n                    },\n                    {\n                        \"id\": \"id8\",\n                        \"title\": \"Event 8\",\n                        \"start\": \"2024-07-01T07:30:00\",\n                        \"end\": \"2024-07-01T10:30:00\",\n                    },\n                    {\n                        \"id\": \"id9\",\n                        \"title\": \"Event 9\",\n                        \"start\": \"2024-07-02T10:40:00\",\n                        \"end\": \"2024-07-02T12:30:00\",\n                    },\n                ],\n            }\n        ]\n\n\napp = App(app_ui, server)\n", "type": "text"}, {"name": "requirements.txt", "content": "shiny\nshiny-calendar\n", "type": "text"}]